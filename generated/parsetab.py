
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'AD56E31EA6DEEC3C73E897E7A2C0615D'
    
_lr_action_items = {'PRINT':([0,2,3,4,14,15,17,18,19,20,33,38,39,44,45,46,47,48,49,50,51,60,61,62,63,],[5,5,-4,-5,5,-6,-13,-14,-15,-16,-18,5,5,5,5,-11,-12,-17,-19,-20,-21,-7,-8,-9,-10,]),'BOOL':([0,2,3,4,14,15,17,18,19,20,33,38,39,44,45,46,47,48,49,50,51,60,61,62,63,],[6,6,-4,-5,6,-6,-13,-14,-15,-16,-18,6,6,6,6,-11,-12,-17,-19,-20,-21,-7,-8,-9,-10,]),'NUMBER':([0,2,3,4,14,15,17,18,19,20,33,38,39,44,45,46,47,48,49,50,51,60,61,62,63,],[7,7,-4,-5,7,-6,-13,-14,-15,-16,-18,7,7,7,7,-11,-12,-17,-19,-20,-21,-7,-8,-9,-10,]),'TEXT':([0,2,3,4,14,15,17,18,19,20,33,38,39,44,45,46,47,48,49,50,51,60,61,62,63,],[8,8,-4,-5,8,-6,-13,-14,-15,-16,-18,8,8,8,8,-11,-12,-17,-19,-20,-21,-7,-8,-9,-10,]),'WHILE':([0,2,3,4,14,15,17,18,19,20,33,38,39,44,45,46,47,48,49,50,51,60,61,62,63,],[9,9,-4,-5,9,-6,-13,-14,-15,-16,-18,9,9,9,9,-11,-12,-17,-19,-20,-21,-7,-8,-9,-10,]),'IF':([0,2,3,4,14,15,17,18,19,20,33,38,39,44,45,46,47,48,49,50,51,60,61,62,63,],[10,10,-4,-5,10,-6,-13,-14,-15,-16,-18,10,10,10,10,-11,-12,-17,-19,-20,-21,-7,-8,-9,-10,]),'SWITCH':([0,2,3,4,14,15,17,18,19,20,33,38,39,44,45,46,47,48,49,50,51,60,61,62,63,],[11,11,-4,-5,11,-6,-13,-14,-15,-16,-18,11,11,11,11,-11,-12,-17,-19,-20,-21,-7,-8,-9,-10,]),'CASE':([0,2,3,4,14,15,17,18,19,20,33,38,39,44,45,46,47,48,49,50,51,60,61,62,63,],[12,12,-4,-5,12,-6,-13,-14,-15,-16,-18,12,12,12,12,-11,-12,-17,-19,-20,-21,-7,-8,-9,-10,]),'$end':([1,2,3,4,13,15,17,18,19,20,30,33,46,47,48,49,50,51,60,61,62,63,],[0,-1,-4,-5,-2,-6,-13,-14,-15,-16,-3,-18,-11,-12,-17,-19,-20,-21,-7,-8,-9,-10,]),'}':([2,3,4,13,15,17,18,19,20,30,33,46,47,48,49,50,51,52,53,58,59,60,61,62,63,],[-1,-4,-5,-2,-6,-13,-14,-15,-16,-3,-18,-11,-12,-17,-19,-20,-21,60,61,62,63,-7,-8,-9,-10,]),';':([2,3,4,15,17,18,19,20,33,46,47,48,49,50,51,60,61,62,63,],[14,-4,-5,-6,-13,-14,-15,-16,-18,-11,-12,-17,-19,-20,-21,-7,-8,-9,-10,]),'IDENTIFIER':([5,6,7,8,9,10,11,16,21,31,32,40,41,42,43,],[17,22,23,24,17,17,17,17,17,17,17,17,17,17,17,]),'DIGIT':([5,9,10,11,12,16,21,31,32,36,40,41,42,43,],[18,18,18,18,29,18,18,18,18,50,18,18,18,18,]),'TRUE':([5,9,10,11,16,21,31,32,40,41,42,43,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'FALSE':([5,9,10,11,16,21,31,32,40,41,42,43,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'(':([5,9,10,11,16,21,31,32,40,41,42,43,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'ADD_OP':([5,9,10,11,15,16,17,18,19,20,21,25,27,31,32,33,34,40,41,42,43,46,47,48,54,55,56,57,],[16,16,16,16,31,16,-13,-14,-15,-16,16,31,31,16,16,-18,31,16,16,16,16,-11,-12,-17,31,31,31,31,]),'MUL_OP':([15,17,18,19,20,25,27,33,34,46,47,48,54,55,56,57,],[32,-13,-14,-15,-16,32,32,-18,32,32,-12,-17,32,32,32,32,]),'{':([17,18,19,20,25,26,28,29,33,46,47,48,54,55,56,57,],[-13,-14,-15,-16,38,39,44,45,-18,-11,-12,-17,-22,-23,-24,-25,]),'EQUAL':([17,18,19,20,27,33,46,47,48,],[-13,-14,-15,-16,40,-18,-11,-12,-17,]),'NOTEQUAL':([17,18,19,20,27,33,46,47,48,],[-13,-14,-15,-16,41,-18,-11,-12,-17,]),'>':([17,18,19,20,27,33,46,47,48,],[-13,-14,-15,-16,42,-18,-11,-12,-17,]),'<':([17,18,19,20,27,33,46,47,48,],[-13,-14,-15,-16,43,-18,-11,-12,-17,]),')':([17,18,19,20,33,34,46,47,48,],[-13,-14,-15,-16,-18,48,-11,-12,-17,]),'=':([22,23,24,],[35,36,37,]),'BOOLEAN':([35,],[49,]),'CHARACTERS':([37,],[51,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programme':([0,2,14,38,39,44,45,],[1,13,30,52,53,58,59,]),'statement':([0,2,14,38,39,44,45,],[2,2,2,2,2,2,2,]),'assignation':([0,2,14,38,39,44,45,],[3,3,3,3,3,3,3,]),'structure':([0,2,14,38,39,44,45,],[4,4,4,4,4,4,4,]),'expression':([5,9,10,11,16,21,31,32,40,41,42,43,],[15,25,27,27,33,34,46,47,54,55,56,57,]),'condition':([10,11,],[26,28,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme','parser5.py',27),
  ('programme -> statement programme','programme',2,'p_programme','parser5.py',28),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parser5.py',36),
  ('statement -> assignation','statement',1,'p_statement','parser5.py',41),
  ('statement -> structure','statement',1,'p_statement','parser5.py',42),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parser5.py',47),
  ('structure -> WHILE expression { programme }','structure',5,'p_structure','parser5.py',52),
  ('structure -> IF condition { programme }','structure',5,'p_structure_if','parser5.py',57),
  ('structure -> SWITCH condition { programme }','structure',5,'p_structure_switch','parser5.py',62),
  ('structure -> CASE DIGIT { programme }','structure',5,'p_structure_case','parser5.py',67),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser5.py',72),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parser5.py',73),
  ('expression -> IDENTIFIER','expression',1,'p_expression_var','parser5.py',78),
  ('expression -> DIGIT','expression',1,'p_expression_num','parser5.py',83),
  ('expression -> TRUE','expression',1,'p_expression_bool','parser5.py',88),
  ('expression -> FALSE','expression',1,'p_expression_bool','parser5.py',89),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser5.py',94),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parser5.py',99),
  ('assignation -> BOOL IDENTIFIER = BOOLEAN','assignation',4,'p_assign_bool','parser5.py',110),
  ('assignation -> NUMBER IDENTIFIER = DIGIT','assignation',4,'p_assign_number','parser5.py',116),
  ('assignation -> TEXT IDENTIFIER = CHARACTERS','assignation',4,'p_assign_text','parser5.py',122),
  ('condition -> expression EQUAL expression','condition',3,'p_condition','parser5.py',128),
  ('condition -> expression NOTEQUAL expression','condition',3,'p_condition','parser5.py',129),
  ('condition -> expression > expression','condition',3,'p_condition','parser5.py',130),
  ('condition -> expression < expression','condition',3,'p_condition','parser5.py',131),
]
