
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftADD_OPleftMUL_OPrightUMINUSDIGIT CHARACTERS BOOLEAN CONTEXT_OP ADD_OP MUL_OP IDENTIFIER EQUAL NOTEQUAL STEP FOR TO WHILE IF ELSE SWITCH CASE DEFAULT PRINT PI NUMBER LIST TEXT BOOL BREAK LOOP programme : statement\n    | statement programme  statement : assignation\n        | structure  statement : BREAK  statement : PRINT '{' expression '}'  condition : expression EQUAL expression\n    | expression NOTEQUAL expression\n    | expression '>' expression\n    | expression '<' expression  structure : WHILE condition '{' programme '}'  structure : LOOP '{' programme '}'  structure : FOR expression TO expression STEP expression '{' programme '}'  structure : IF condition '{' programme '}'  structure : IF condition '{' programme '}' ELSE '{' programme '}'  structure : SWITCH expression '{' programme '}'  structure : CASE expression '{' programme '}'  expression : expression ADD_OP expression\n            | expression MUL_OP expression  expression : IDENTIFIER  expression : DIGIT  expression : CHARACTERS  expression : BOOLEAN  expression : '(' expression ')'  expression : ADD_OP expression %prec UMINUS  assignation : IDENTIFIER '=' expression  assignation : BOOL IDENTIFIER '=' expression  assignation : NUMBER IDENTIFIER '=' DIGIT  assignation : TEXT IDENTIFIER '=' CHARACTERS "
    
_lr_action_items = {'BREAK':([0,2,3,4,5,26,27,28,29,31,37,41,48,52,53,54,55,56,57,58,64,65,66,67,72,74,75,76,79,80,83,84,],[5,5,-3,-4,-5,-20,-21,-22,-23,5,-26,5,-25,5,5,5,-6,-27,-28,-29,-18,-19,-24,-12,-11,-14,-16,-17,5,5,-13,-15,]),'PRINT':([0,2,3,4,5,26,27,28,29,31,37,41,48,52,53,54,55,56,57,58,64,65,66,67,72,74,75,76,79,80,83,84,],[6,6,-3,-4,-5,-20,-21,-22,-23,6,-26,6,-25,6,6,6,-6,-27,-28,-29,-18,-19,-24,-12,-11,-14,-16,-17,6,6,-13,-15,]),'IDENTIFIER':([0,2,3,4,5,8,9,10,11,13,14,15,16,18,19,25,26,27,28,29,30,31,37,38,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,64,65,66,67,72,73,74,75,76,79,80,83,84,],[7,7,-3,-4,-5,20,21,22,26,26,26,26,26,26,26,26,-20,-21,-22,-23,26,7,-26,26,7,26,26,26,26,26,26,-25,26,7,7,7,-6,-27,-28,-29,-18,-19,-24,-12,-11,26,-14,-16,-17,7,7,-13,-15,]),'BOOL':([0,2,3,4,5,26,27,28,29,31,37,41,48,52,53,54,55,56,57,58,64,65,66,67,72,74,75,76,79,80,83,84,],[8,8,-3,-4,-5,-20,-21,-22,-23,8,-26,8,-25,8,8,8,-6,-27,-28,-29,-18,-19,-24,-12,-11,-14,-16,-17,8,8,-13,-15,]),'NUMBER':([0,2,3,4,5,26,27,28,29,31,37,41,48,52,53,54,55,56,57,58,64,65,66,67,72,74,75,76,79,80,83,84,],[9,9,-3,-4,-5,-20,-21,-22,-23,9,-26,9,-25,9,9,9,-6,-27,-28,-29,-18,-19,-24,-12,-11,-14,-16,-17,9,9,-13,-15,]),'TEXT':([0,2,3,4,5,26,27,28,29,31,37,41,48,52,53,54,55,56,57,58,64,65,66,67,72,74,75,76,79,80,83,84,],[10,10,-3,-4,-5,-20,-21,-22,-23,10,-26,10,-25,10,10,10,-6,-27,-28,-29,-18,-19,-24,-12,-11,-14,-16,-17,10,10,-13,-15,]),'WHILE':([0,2,3,4,5,26,27,28,29,31,37,41,48,52,53,54,55,56,57,58,64,65,66,67,72,74,75,76,79,80,83,84,],[11,11,-3,-4,-5,-20,-21,-22,-23,11,-26,11,-25,11,11,11,-6,-27,-28,-29,-18,-19,-24,-12,-11,-14,-16,-17,11,11,-13,-15,]),'LOOP':([0,2,3,4,5,26,27,28,29,31,37,41,48,52,53,54,55,56,57,58,64,65,66,67,72,74,75,76,79,80,83,84,],[12,12,-3,-4,-5,-20,-21,-22,-23,12,-26,12,-25,12,12,12,-6,-27,-28,-29,-18,-19,-24,-12,-11,-14,-16,-17,12,12,-13,-15,]),'FOR':([0,2,3,4,5,26,27,28,29,31,37,41,48,52,53,54,55,56,57,58,64,65,66,67,72,74,75,76,79,80,83,84,],[13,13,-3,-4,-5,-20,-21,-22,-23,13,-26,13,-25,13,13,13,-6,-27,-28,-29,-18,-19,-24,-12,-11,-14,-16,-17,13,13,-13,-15,]),'IF':([0,2,3,4,5,26,27,28,29,31,37,41,48,52,53,54,55,56,57,58,64,65,66,67,72,74,75,76,79,80,83,84,],[14,14,-3,-4,-5,-20,-21,-22,-23,14,-26,14,-25,14,14,14,-6,-27,-28,-29,-18,-19,-24,-12,-11,-14,-16,-17,14,14,-13,-15,]),'SWITCH':([0,2,3,4,5,26,27,28,29,31,37,41,48,52,53,54,55,56,57,58,64,65,66,67,72,74,75,76,79,80,83,84,],[15,15,-3,-4,-5,-20,-21,-22,-23,15,-26,15,-25,15,15,15,-6,-27,-28,-29,-18,-19,-24,-12,-11,-14,-16,-17,15,15,-13,-15,]),'CASE':([0,2,3,4,5,26,27,28,29,31,37,41,48,52,53,54,55,56,57,58,64,65,66,67,72,74,75,76,79,80,83,84,],[16,16,-3,-4,-5,-20,-21,-22,-23,16,-26,16,-25,16,16,16,-6,-27,-28,-29,-18,-19,-24,-12,-11,-14,-16,-17,16,16,-13,-15,]),'$end':([1,2,3,4,5,17,26,27,28,29,37,48,55,56,57,58,64,65,66,67,72,74,75,76,83,84,],[0,-1,-3,-4,-5,-2,-20,-21,-22,-23,-26,-25,-6,-27,-28,-29,-18,-19,-24,-12,-11,-14,-16,-17,-13,-15,]),'}':([2,3,4,5,17,26,27,28,29,36,37,48,50,55,56,57,58,59,64,65,66,67,69,70,71,72,74,75,76,81,82,83,84,],[-1,-3,-4,-5,-2,-20,-21,-22,-23,55,-26,-25,67,-6,-27,-28,-29,72,-18,-19,-24,-12,74,75,76,-11,-14,-16,-17,83,84,-13,-15,]),'{':([6,12,23,26,27,28,29,33,34,35,48,60,61,62,63,64,65,66,77,78,],[18,31,41,-20,-21,-22,-23,52,53,54,-25,-7,-8,-9,-10,-18,-19,-24,79,80,]),'=':([7,20,21,22,],[19,38,39,40,]),'DIGIT':([11,13,14,15,16,18,19,25,30,38,39,42,43,44,45,46,47,51,73,],[27,27,27,27,27,27,27,27,27,27,57,27,27,27,27,27,27,27,27,]),'CHARACTERS':([11,13,14,15,16,18,19,25,30,38,40,42,43,44,45,46,47,51,73,],[28,28,28,28,28,28,28,28,28,28,58,28,28,28,28,28,28,28,28,]),'BOOLEAN':([11,13,14,15,16,18,19,25,30,38,42,43,44,45,46,47,51,73,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'(':([11,13,14,15,16,18,19,25,30,38,42,43,44,45,46,47,51,73,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'ADD_OP':([11,13,14,15,16,18,19,24,25,26,27,28,29,30,32,34,35,36,37,38,42,43,44,45,46,47,48,49,51,56,60,61,62,63,64,65,66,68,73,77,],[25,25,25,25,25,25,25,46,25,-20,-21,-22,-23,25,46,46,46,46,46,25,25,25,25,25,25,25,-25,46,25,46,46,46,46,46,-18,-19,-24,46,25,46,]),'EQUAL':([24,26,27,28,29,48,64,65,66,],[42,-20,-21,-22,-23,-25,-18,-19,-24,]),'NOTEQUAL':([24,26,27,28,29,48,64,65,66,],[43,-20,-21,-22,-23,-25,-18,-19,-24,]),'>':([24,26,27,28,29,48,64,65,66,],[44,-20,-21,-22,-23,-25,-18,-19,-24,]),'<':([24,26,27,28,29,48,64,65,66,],[45,-20,-21,-22,-23,-25,-18,-19,-24,]),'MUL_OP':([24,26,27,28,29,32,34,35,36,37,48,49,56,60,61,62,63,64,65,66,68,77,],[47,-20,-21,-22,-23,47,47,47,47,47,-25,47,47,47,47,47,47,47,-19,-24,47,47,]),'TO':([26,27,28,29,32,48,64,65,66,],[-20,-21,-22,-23,51,-25,-18,-19,-24,]),')':([26,27,28,29,48,49,64,65,66,],[-20,-21,-22,-23,-25,66,-18,-19,-24,]),'STEP':([26,27,28,29,48,64,65,66,68,],[-20,-21,-22,-23,-25,-18,-19,-24,73,]),'ELSE':([74,],[78,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programme':([0,2,31,41,52,53,54,79,80,],[1,17,50,59,69,70,71,81,82,]),'statement':([0,2,31,41,52,53,54,79,80,],[2,2,2,2,2,2,2,2,2,]),'assignation':([0,2,31,41,52,53,54,79,80,],[3,3,3,3,3,3,3,3,3,]),'structure':([0,2,31,41,52,53,54,79,80,],[4,4,4,4,4,4,4,4,4,]),'condition':([11,14,],[23,33,]),'expression':([11,13,14,15,16,18,19,25,30,38,42,43,44,45,46,47,51,73,],[24,32,24,34,35,36,37,48,49,56,60,61,62,63,64,65,68,77,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme','parser_bracket.py',27),
  ('programme -> statement programme','programme',2,'p_programme','parser_bracket.py',28),
  ('statement -> assignation','statement',1,'p_statement','parser_bracket.py',36),
  ('statement -> structure','statement',1,'p_statement','parser_bracket.py',37),
  ('statement -> BREAK','statement',1,'p_statement_break','parser_bracket.py',42),
  ('statement -> PRINT { expression }','statement',4,'p_statement_print','parser_bracket.py',47),
  ('condition -> expression EQUAL expression','condition',3,'p_condition','parser_bracket.py',52),
  ('condition -> expression NOTEQUAL expression','condition',3,'p_condition','parser_bracket.py',53),
  ('condition -> expression > expression','condition',3,'p_condition','parser_bracket.py',54),
  ('condition -> expression < expression','condition',3,'p_condition','parser_bracket.py',55),
  ('structure -> WHILE condition { programme }','structure',5,'p_structure_while','parser_bracket.py',60),
  ('structure -> LOOP { programme }','structure',4,'p_structure_loop','parser_bracket.py',65),
  ('structure -> FOR expression TO expression STEP expression { programme }','structure',9,'p_structure_for','parser_bracket.py',70),
  ('structure -> IF condition { programme }','structure',5,'p_structure_if','parser_bracket.py',75),
  ('structure -> IF condition { programme } ELSE { programme }','structure',9,'p_structure_if_else','parser_bracket.py',80),
  ('structure -> SWITCH expression { programme }','structure',5,'p_structure_switch','parser_bracket.py',85),
  ('structure -> CASE expression { programme }','structure',5,'p_structure_case','parser_bracket.py',90),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser_bracket.py',95),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parser_bracket.py',96),
  ('expression -> IDENTIFIER','expression',1,'p_expression_var','parser_bracket.py',101),
  ('expression -> DIGIT','expression',1,'p_expression_num','parser_bracket.py',106),
  ('expression -> CHARACTERS','expression',1,'p_expression_text','parser_bracket.py',111),
  ('expression -> BOOLEAN','expression',1,'p_expression_bool','parser_bracket.py',116),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser_bracket.py',121),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parser_bracket.py',126),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parser_bracket.py',131),
  ('assignation -> BOOL IDENTIFIER = expression','assignation',4,'p_assign_bool','parser_bracket.py',137),
  ('assignation -> NUMBER IDENTIFIER = DIGIT','assignation',4,'p_assign_number','parser_bracket.py',143),
  ('assignation -> TEXT IDENTIFIER = CHARACTERS','assignation',4,'p_assign_text','parser_bracket.py',149),
]
