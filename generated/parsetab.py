
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftADD_OPleftMUL_OPrightUMINUSDIGIT CHARACTERS BOOLEAN CONTEXT_OP ADD_OP MUL_OP COMP_OP IDENTIFIER EQUAL NOTEQUAL STEP FOR TO WHILE IF ELSE SWITCH CASE DEFAULT PRINT PI TRUE FALSE NUMBER LIST TEXT BOOL BREAK LOOP programme : statement\n    | statement programme  programme : statement ';' programme  statement : assignation\n        | structure  statement : PRINT '{' expression '}'  condition : expression EQUAL expression\n    | expression NOTEQUAL expression\n    | expression '>' expression\n    | expression '<' expression  structure : WHILE condition '{' programme '}'  structure : LOOP '{' programme BREAK '}'  structure : FOR expression TO expression STEP expression '{' programme '}'  structure : IF condition '{' programme '}'  structure : IF condition '{' programme '}' ELSE '{' programme '}'  structure : SWITCH expression '{' programme '}'  structure : CASE expression '{' programme BREAK '}'  expression : expression ADD_OP expression\n            | expression MUL_OP expression  expression : IDENTIFIER  expression : DIGIT  expression : TEXT  expression : TRUE\n    | FALSE  expression : '(' expression ')'  expression : ADD_OP expression %prec UMINUS  type : NUMBER\n        | BOOL\n        | TEXT\n        | LIST  assignation : IDENTIFIER '=' expression  assignation : BOOL IDENTIFIER '=' TRUE\n     | BOOL IDENTIFIER '=' FALSE  assignation : NUMBER IDENTIFIER '=' DIGIT  assignation : TEXT IDENTIFIER '=' CHARACTERS "
    
_lr_action_items = {'PRINT':([0,2,3,4,17,26,27,28,29,30,32,39,43,50,54,55,56,57,58,59,60,61,67,68,69,75,76,78,79,83,84,85,88,89,],[5,5,-4,-5,5,-20,-21,-22,-23,-24,5,-31,5,-26,5,5,5,-6,-32,-33,-34,-35,-18,-19,-25,-11,-12,-14,-16,-17,5,5,-13,-15,]),'IDENTIFIER':([0,2,3,4,7,8,9,10,12,13,14,15,17,18,19,25,26,27,28,29,30,31,32,39,43,44,45,46,47,48,49,50,53,54,55,56,57,58,59,60,61,67,68,69,75,76,77,78,79,83,84,85,88,89,],[6,6,-4,-5,20,21,22,26,26,26,26,26,6,26,26,26,-20,-21,-22,-23,-24,26,6,-31,6,26,26,26,26,26,26,-26,26,6,6,6,-6,-32,-33,-34,-35,-18,-19,-25,-11,-12,26,-14,-16,-17,6,6,-13,-15,]),'BOOL':([0,2,3,4,17,26,27,28,29,30,32,39,43,50,54,55,56,57,58,59,60,61,67,68,69,75,76,78,79,83,84,85,88,89,],[7,7,-4,-5,7,-20,-21,-22,-23,-24,7,-31,7,-26,7,7,7,-6,-32,-33,-34,-35,-18,-19,-25,-11,-12,-14,-16,-17,7,7,-13,-15,]),'NUMBER':([0,2,3,4,17,26,27,28,29,30,32,39,43,50,54,55,56,57,58,59,60,61,67,68,69,75,76,78,79,83,84,85,88,89,],[8,8,-4,-5,8,-20,-21,-22,-23,-24,8,-31,8,-26,8,8,8,-6,-32,-33,-34,-35,-18,-19,-25,-11,-12,-14,-16,-17,8,8,-13,-15,]),'TEXT':([0,2,3,4,10,12,13,14,15,17,18,19,25,26,27,28,29,30,31,32,39,43,44,45,46,47,48,49,50,53,54,55,56,57,58,59,60,61,67,68,69,75,76,77,78,79,83,84,85,88,89,],[9,9,-4,-5,28,28,28,28,28,9,28,28,28,-20,-21,-22,-23,-24,28,9,-31,9,28,28,28,28,28,28,-26,28,9,9,9,-6,-32,-33,-34,-35,-18,-19,-25,-11,-12,28,-14,-16,-17,9,9,-13,-15,]),'WHILE':([0,2,3,4,17,26,27,28,29,30,32,39,43,50,54,55,56,57,58,59,60,61,67,68,69,75,76,78,79,83,84,85,88,89,],[10,10,-4,-5,10,-20,-21,-22,-23,-24,10,-31,10,-26,10,10,10,-6,-32,-33,-34,-35,-18,-19,-25,-11,-12,-14,-16,-17,10,10,-13,-15,]),'LOOP':([0,2,3,4,17,26,27,28,29,30,32,39,43,50,54,55,56,57,58,59,60,61,67,68,69,75,76,78,79,83,84,85,88,89,],[11,11,-4,-5,11,-20,-21,-22,-23,-24,11,-31,11,-26,11,11,11,-6,-32,-33,-34,-35,-18,-19,-25,-11,-12,-14,-16,-17,11,11,-13,-15,]),'FOR':([0,2,3,4,17,26,27,28,29,30,32,39,43,50,54,55,56,57,58,59,60,61,67,68,69,75,76,78,79,83,84,85,88,89,],[12,12,-4,-5,12,-20,-21,-22,-23,-24,12,-31,12,-26,12,12,12,-6,-32,-33,-34,-35,-18,-19,-25,-11,-12,-14,-16,-17,12,12,-13,-15,]),'IF':([0,2,3,4,17,26,27,28,29,30,32,39,43,50,54,55,56,57,58,59,60,61,67,68,69,75,76,78,79,83,84,85,88,89,],[13,13,-4,-5,13,-20,-21,-22,-23,-24,13,-31,13,-26,13,13,13,-6,-32,-33,-34,-35,-18,-19,-25,-11,-12,-14,-16,-17,13,13,-13,-15,]),'SWITCH':([0,2,3,4,17,26,27,28,29,30,32,39,43,50,54,55,56,57,58,59,60,61,67,68,69,75,76,78,79,83,84,85,88,89,],[14,14,-4,-5,14,-20,-21,-22,-23,-24,14,-31,14,-26,14,14,14,-6,-32,-33,-34,-35,-18,-19,-25,-11,-12,-14,-16,-17,14,14,-13,-15,]),'CASE':([0,2,3,4,17,26,27,28,29,30,32,39,43,50,54,55,56,57,58,59,60,61,67,68,69,75,76,78,79,83,84,85,88,89,],[15,15,-4,-5,15,-20,-21,-22,-23,-24,15,-31,15,-26,15,15,15,-6,-32,-33,-34,-35,-18,-19,-25,-11,-12,-14,-16,-17,15,15,-13,-15,]),'$end':([1,2,3,4,16,26,27,28,29,30,37,39,50,57,58,59,60,61,67,68,69,75,76,78,79,83,88,89,],[0,-1,-4,-5,-2,-20,-21,-22,-23,-24,-3,-31,-26,-6,-32,-33,-34,-35,-18,-19,-25,-11,-12,-14,-16,-17,-13,-15,]),'BREAK':([2,3,4,16,26,27,28,29,30,37,39,50,52,57,58,59,60,61,67,68,69,74,75,76,78,79,83,88,89,],[-1,-4,-5,-2,-20,-21,-22,-23,-24,-3,-31,-26,70,-6,-32,-33,-34,-35,-18,-19,-25,80,-11,-12,-14,-16,-17,-13,-15,]),'}':([2,3,4,16,26,27,28,29,30,37,38,39,50,57,58,59,60,61,62,67,68,69,70,72,73,75,76,78,79,80,83,86,87,88,89,],[-1,-4,-5,-2,-20,-21,-22,-23,-24,-3,57,-31,-26,-6,-32,-33,-34,-35,75,-18,-19,-25,76,78,79,-11,-12,-14,-16,83,-17,88,89,-13,-15,]),';':([2,3,4,26,27,28,29,30,39,50,57,58,59,60,61,67,68,69,75,76,78,79,83,88,89,],[17,-4,-5,-20,-21,-22,-23,-24,-31,-26,-6,-32,-33,-34,-35,-18,-19,-25,-11,-12,-14,-16,-17,-13,-15,]),'{':([5,11,23,26,27,28,29,30,34,35,36,50,63,64,65,66,67,68,69,81,82,],[18,32,43,-20,-21,-22,-23,-24,54,55,56,-26,-7,-8,-9,-10,-18,-19,-25,84,85,]),'=':([6,20,21,22,],[19,40,41,42,]),'DIGIT':([10,12,13,14,15,18,19,25,31,41,44,45,46,47,48,49,53,77,],[27,27,27,27,27,27,27,27,27,60,27,27,27,27,27,27,27,27,]),'TRUE':([10,12,13,14,15,18,19,25,31,40,44,45,46,47,48,49,53,77,],[29,29,29,29,29,29,29,29,29,58,29,29,29,29,29,29,29,29,]),'FALSE':([10,12,13,14,15,18,19,25,31,40,44,45,46,47,48,49,53,77,],[30,30,30,30,30,30,30,30,30,59,30,30,30,30,30,30,30,30,]),'(':([10,12,13,14,15,18,19,25,31,44,45,46,47,48,49,53,77,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'ADD_OP':([10,12,13,14,15,18,19,24,25,26,27,28,29,30,31,33,35,36,38,39,44,45,46,47,48,49,50,51,53,63,64,65,66,67,68,69,71,77,81,],[25,25,25,25,25,25,25,48,25,-20,-21,-22,-23,-24,25,48,48,48,48,48,25,25,25,25,25,25,-26,48,25,48,48,48,48,-18,-19,-25,48,25,48,]),'EQUAL':([24,26,27,28,29,30,50,67,68,69,],[44,-20,-21,-22,-23,-24,-26,-18,-19,-25,]),'NOTEQUAL':([24,26,27,28,29,30,50,67,68,69,],[45,-20,-21,-22,-23,-24,-26,-18,-19,-25,]),'>':([24,26,27,28,29,30,50,67,68,69,],[46,-20,-21,-22,-23,-24,-26,-18,-19,-25,]),'<':([24,26,27,28,29,30,50,67,68,69,],[47,-20,-21,-22,-23,-24,-26,-18,-19,-25,]),'MUL_OP':([24,26,27,28,29,30,33,35,36,38,39,50,51,63,64,65,66,67,68,69,71,81,],[49,-20,-21,-22,-23,-24,49,49,49,49,49,-26,49,49,49,49,49,49,-19,-25,49,49,]),'TO':([26,27,28,29,30,33,50,67,68,69,],[-20,-21,-22,-23,-24,53,-26,-18,-19,-25,]),')':([26,27,28,29,30,50,51,67,68,69,],[-20,-21,-22,-23,-24,-26,69,-18,-19,-25,]),'STEP':([26,27,28,29,30,50,67,68,69,71,],[-20,-21,-22,-23,-24,-26,-18,-19,-25,77,]),'CHARACTERS':([42,],[61,]),'ELSE':([78,],[82,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programme':([0,2,17,32,43,54,55,56,84,85,],[1,16,37,52,62,72,73,74,86,87,]),'statement':([0,2,17,32,43,54,55,56,84,85,],[2,2,2,2,2,2,2,2,2,2,]),'assignation':([0,2,17,32,43,54,55,56,84,85,],[3,3,3,3,3,3,3,3,3,3,]),'structure':([0,2,17,32,43,54,55,56,84,85,],[4,4,4,4,4,4,4,4,4,4,]),'condition':([10,13,],[23,34,]),'expression':([10,12,13,14,15,18,19,25,31,44,45,46,47,48,49,53,77,],[24,33,24,35,36,38,39,50,51,63,64,65,66,67,68,71,81,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme','parser5.py',27),
  ('programme -> statement programme','programme',2,'p_programme','parser5.py',28),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parser5.py',36),
  ('statement -> assignation','statement',1,'p_statement','parser5.py',41),
  ('statement -> structure','statement',1,'p_statement','parser5.py',42),
  ('statement -> PRINT { expression }','statement',4,'p_statement_print','parser5.py',47),
  ('condition -> expression EQUAL expression','condition',3,'p_condition','parser5.py',52),
  ('condition -> expression NOTEQUAL expression','condition',3,'p_condition','parser5.py',53),
  ('condition -> expression > expression','condition',3,'p_condition','parser5.py',54),
  ('condition -> expression < expression','condition',3,'p_condition','parser5.py',55),
  ('structure -> WHILE condition { programme }','structure',5,'p_structure_while','parser5.py',60),
  ('structure -> LOOP { programme BREAK }','structure',5,'p_structure_loop','parser5.py',65),
  ('structure -> FOR expression TO expression STEP expression { programme }','structure',9,'p_structure_for','parser5.py',70),
  ('structure -> IF condition { programme }','structure',5,'p_structure_if','parser5.py',75),
  ('structure -> IF condition { programme } ELSE { programme }','structure',9,'p_structure_if_else','parser5.py',80),
  ('structure -> SWITCH expression { programme }','structure',5,'p_structure_switch','parser5.py',84),
  ('structure -> CASE expression { programme BREAK }','structure',6,'p_structure_case','parser5.py',89),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser5.py',94),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parser5.py',95),
  ('expression -> IDENTIFIER','expression',1,'p_expression_var','parser5.py',100),
  ('expression -> DIGIT','expression',1,'p_expression_num','parser5.py',105),
  ('expression -> TEXT','expression',1,'p_expression_text','parser5.py',110),
  ('expression -> TRUE','expression',1,'p_expression_bool','parser5.py',115),
  ('expression -> FALSE','expression',1,'p_expression_bool','parser5.py',116),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser5.py',121),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parser5.py',126),
  ('type -> NUMBER','type',1,'p_type','parser5.py',131),
  ('type -> BOOL','type',1,'p_type','parser5.py',132),
  ('type -> TEXT','type',1,'p_type','parser5.py',133),
  ('type -> LIST','type',1,'p_type','parser5.py',134),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parser5.py',139),
  ('assignation -> BOOL IDENTIFIER = TRUE','assignation',4,'p_assign_bool','parser5.py',145),
  ('assignation -> BOOL IDENTIFIER = FALSE','assignation',4,'p_assign_bool','parser5.py',146),
  ('assignation -> NUMBER IDENTIFIER = DIGIT','assignation',4,'p_assign_number','parser5.py',152),
  ('assignation -> TEXT IDENTIFIER = CHARACTERS','assignation',4,'p_assign_text','parser5.py',158),
]
