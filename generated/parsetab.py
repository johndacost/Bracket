
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftADD_OPleftMUL_OPrightUMINUSDIGIT CHARACTERS BOOLEAN CONTEXT_OP ADD_OP MUL_OP COMP_OP IDENTIFIER EQUAL NOTEQUAL STEP FOR TO WHILE IF ELSE SWITCH CASE DEFAULT PRINT PI TRUE FALSE NUMBER LIST TEXT BOOL BREAK LOOP programme : statement\n    | statement programme  programme : statement ';' programme  statement : assignation\n        | structure  statement : BREAK  statement : PRINT '{' expression '}'  condition : expression EQUAL expression\n    | expression NOTEQUAL expression\n    | expression '>' expression\n    | expression '<' expression  structure : WHILE condition '{' programme '}'  structure : LOOP '{' programme '}'  structure : FOR expression TO expression STEP expression '{' programme '}'  structure : IF condition '{' programme '}'  structure : IF condition '{' programme '}' ELSE '{' programme '}'  structure : SWITCH expression '{' programme statement '}'  structure : CASE expression '{' programme BREAK '}'  expression : expression ADD_OP expression\n            | expression MUL_OP expression  expression : IDENTIFIER  expression : DIGIT  expression : TEXT  expression : TRUE\n    | FALSE  expression : '(' expression ')'  expression : ADD_OP expression %prec UMINUS  type : NUMBER\n        | BOOL\n        | TEXT\n        | LIST  assignation : IDENTIFIER '=' expression  assignation : BOOL IDENTIFIER '=' TRUE\n     | BOOL IDENTIFIER '=' FALSE  assignation : NUMBER IDENTIFIER '=' DIGIT  assignation : TEXT IDENTIFIER '=' CHARACTERS "
    
_lr_action_items = {'BREAK':([0,2,3,4,5,17,18,27,28,29,30,31,33,38,40,44,51,55,56,57,58,59,60,61,62,68,69,70,71,74,75,76,78,83,84,85,86,89,90,],[5,5,-4,-5,-6,-2,5,-21,-22,-23,-24,-25,5,-3,-32,5,-27,5,5,5,-7,-33,-34,-35,-36,-19,-20,-26,-13,5,80,-12,-15,-17,-18,5,5,-14,-16,]),'PRINT':([0,2,3,4,5,17,18,27,28,29,30,31,33,38,40,44,51,55,56,57,58,59,60,61,62,68,69,70,71,74,76,78,83,84,85,86,89,90,],[6,6,-4,-5,-6,-2,6,-21,-22,-23,-24,-25,6,-3,-32,6,-27,6,6,6,-7,-33,-34,-35,-36,-19,-20,-26,-13,6,-12,-15,-17,-18,6,6,-14,-16,]),'IDENTIFIER':([0,2,3,4,5,8,9,10,11,13,14,15,16,17,18,19,20,26,27,28,29,30,31,32,33,38,40,44,45,46,47,48,49,50,51,54,55,56,57,58,59,60,61,62,68,69,70,71,74,76,77,78,83,84,85,86,89,90,],[7,7,-4,-5,-6,21,22,23,27,27,27,27,27,-2,7,27,27,27,-21,-22,-23,-24,-25,27,7,-3,-32,7,27,27,27,27,27,27,-27,27,7,7,7,-7,-33,-34,-35,-36,-19,-20,-26,-13,7,-12,27,-15,-17,-18,7,7,-14,-16,]),'BOOL':([0,2,3,4,5,17,18,27,28,29,30,31,33,38,40,44,51,55,56,57,58,59,60,61,62,68,69,70,71,74,76,78,83,84,85,86,89,90,],[8,8,-4,-5,-6,-2,8,-21,-22,-23,-24,-25,8,-3,-32,8,-27,8,8,8,-7,-33,-34,-35,-36,-19,-20,-26,-13,8,-12,-15,-17,-18,8,8,-14,-16,]),'NUMBER':([0,2,3,4,5,17,18,27,28,29,30,31,33,38,40,44,51,55,56,57,58,59,60,61,62,68,69,70,71,74,76,78,83,84,85,86,89,90,],[9,9,-4,-5,-6,-2,9,-21,-22,-23,-24,-25,9,-3,-32,9,-27,9,9,9,-7,-33,-34,-35,-36,-19,-20,-26,-13,9,-12,-15,-17,-18,9,9,-14,-16,]),'TEXT':([0,2,3,4,5,11,13,14,15,16,17,18,19,20,26,27,28,29,30,31,32,33,38,40,44,45,46,47,48,49,50,51,54,55,56,57,58,59,60,61,62,68,69,70,71,74,76,77,78,83,84,85,86,89,90,],[10,10,-4,-5,-6,29,29,29,29,29,-2,10,29,29,29,-21,-22,-23,-24,-25,29,10,-3,-32,10,29,29,29,29,29,29,-27,29,10,10,10,-7,-33,-34,-35,-36,-19,-20,-26,-13,10,-12,29,-15,-17,-18,10,10,-14,-16,]),'WHILE':([0,2,3,4,5,17,18,27,28,29,30,31,33,38,40,44,51,55,56,57,58,59,60,61,62,68,69,70,71,74,76,78,83,84,85,86,89,90,],[11,11,-4,-5,-6,-2,11,-21,-22,-23,-24,-25,11,-3,-32,11,-27,11,11,11,-7,-33,-34,-35,-36,-19,-20,-26,-13,11,-12,-15,-17,-18,11,11,-14,-16,]),'LOOP':([0,2,3,4,5,17,18,27,28,29,30,31,33,38,40,44,51,55,56,57,58,59,60,61,62,68,69,70,71,74,76,78,83,84,85,86,89,90,],[12,12,-4,-5,-6,-2,12,-21,-22,-23,-24,-25,12,-3,-32,12,-27,12,12,12,-7,-33,-34,-35,-36,-19,-20,-26,-13,12,-12,-15,-17,-18,12,12,-14,-16,]),'FOR':([0,2,3,4,5,17,18,27,28,29,30,31,33,38,40,44,51,55,56,57,58,59,60,61,62,68,69,70,71,74,76,78,83,84,85,86,89,90,],[13,13,-4,-5,-6,-2,13,-21,-22,-23,-24,-25,13,-3,-32,13,-27,13,13,13,-7,-33,-34,-35,-36,-19,-20,-26,-13,13,-12,-15,-17,-18,13,13,-14,-16,]),'IF':([0,2,3,4,5,17,18,27,28,29,30,31,33,38,40,44,51,55,56,57,58,59,60,61,62,68,69,70,71,74,76,78,83,84,85,86,89,90,],[14,14,-4,-5,-6,-2,14,-21,-22,-23,-24,-25,14,-3,-32,14,-27,14,14,14,-7,-33,-34,-35,-36,-19,-20,-26,-13,14,-12,-15,-17,-18,14,14,-14,-16,]),'SWITCH':([0,2,3,4,5,17,18,27,28,29,30,31,33,38,40,44,51,55,56,57,58,59,60,61,62,68,69,70,71,74,76,78,83,84,85,86,89,90,],[15,15,-4,-5,-6,-2,15,-21,-22,-23,-24,-25,15,-3,-32,15,-27,15,15,15,-7,-33,-34,-35,-36,-19,-20,-26,-13,15,-12,-15,-17,-18,15,15,-14,-16,]),'CASE':([0,2,3,4,5,17,18,27,28,29,30,31,33,38,40,44,51,55,56,57,58,59,60,61,62,68,69,70,71,74,76,78,83,84,85,86,89,90,],[16,16,-4,-5,-6,-2,16,-21,-22,-23,-24,-25,16,-3,-32,16,-27,16,16,16,-7,-33,-34,-35,-36,-19,-20,-26,-13,16,-12,-15,-17,-18,16,16,-14,-16,]),'$end':([1,2,3,4,5,17,27,28,29,30,31,38,40,51,58,59,60,61,62,68,69,70,71,76,78,83,84,89,90,],[0,-1,-4,-5,-6,-2,-21,-22,-23,-24,-25,-3,-32,-27,-7,-33,-34,-35,-36,-19,-20,-26,-13,-12,-15,-17,-18,-14,-16,]),'}':([2,3,4,5,17,27,28,29,30,31,38,39,40,51,53,58,59,60,61,62,63,68,69,70,71,73,76,78,79,80,83,84,87,88,89,90,],[-1,-4,-5,-6,-2,-21,-22,-23,-24,-25,-3,58,-32,-27,71,-7,-33,-34,-35,-36,76,-19,-20,-26,-13,78,-12,-15,83,84,-17,-18,89,90,-14,-16,]),';':([2,3,4,5,27,28,29,30,31,40,51,58,59,60,61,62,68,69,70,71,76,78,83,84,89,90,],[18,-4,-5,-6,-21,-22,-23,-24,-25,-32,-27,-7,-33,-34,-35,-36,-19,-20,-26,-13,-12,-15,-17,-18,-14,-16,]),'{':([6,12,24,27,28,29,30,31,35,36,37,51,64,65,66,67,68,69,70,81,82,],[19,33,44,-21,-22,-23,-24,-25,55,56,57,-27,-8,-9,-10,-11,-19,-20,-26,85,86,]),'=':([7,21,22,23,],[20,41,42,43,]),'DIGIT':([11,13,14,15,16,19,20,26,32,42,45,46,47,48,49,50,54,77,],[28,28,28,28,28,28,28,28,28,61,28,28,28,28,28,28,28,28,]),'TRUE':([11,13,14,15,16,19,20,26,32,41,45,46,47,48,49,50,54,77,],[30,30,30,30,30,30,30,30,30,59,30,30,30,30,30,30,30,30,]),'FALSE':([11,13,14,15,16,19,20,26,32,41,45,46,47,48,49,50,54,77,],[31,31,31,31,31,31,31,31,31,60,31,31,31,31,31,31,31,31,]),'(':([11,13,14,15,16,19,20,26,32,45,46,47,48,49,50,54,77,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'ADD_OP':([11,13,14,15,16,19,20,25,26,27,28,29,30,31,32,34,36,37,39,40,45,46,47,48,49,50,51,52,54,64,65,66,67,68,69,70,72,77,81,],[26,26,26,26,26,26,26,49,26,-21,-22,-23,-24,-25,26,49,49,49,49,49,26,26,26,26,26,26,-27,49,26,49,49,49,49,-19,-20,-26,49,26,49,]),'EQUAL':([25,27,28,29,30,31,51,68,69,70,],[45,-21,-22,-23,-24,-25,-27,-19,-20,-26,]),'NOTEQUAL':([25,27,28,29,30,31,51,68,69,70,],[46,-21,-22,-23,-24,-25,-27,-19,-20,-26,]),'>':([25,27,28,29,30,31,51,68,69,70,],[47,-21,-22,-23,-24,-25,-27,-19,-20,-26,]),'<':([25,27,28,29,30,31,51,68,69,70,],[48,-21,-22,-23,-24,-25,-27,-19,-20,-26,]),'MUL_OP':([25,27,28,29,30,31,34,36,37,39,40,51,52,64,65,66,67,68,69,70,72,81,],[50,-21,-22,-23,-24,-25,50,50,50,50,50,-27,50,50,50,50,50,50,-20,-26,50,50,]),'TO':([27,28,29,30,31,34,51,68,69,70,],[-21,-22,-23,-24,-25,54,-27,-19,-20,-26,]),')':([27,28,29,30,31,51,52,68,69,70,],[-21,-22,-23,-24,-25,-27,70,-19,-20,-26,]),'STEP':([27,28,29,30,31,51,68,69,70,72,],[-21,-22,-23,-24,-25,-27,-19,-20,-26,77,]),'CHARACTERS':([43,],[62,]),'ELSE':([78,],[82,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programme':([0,2,18,33,44,55,56,57,85,86,],[1,17,38,53,63,73,74,75,87,88,]),'statement':([0,2,18,33,44,55,56,57,74,85,86,],[2,2,2,2,2,2,2,2,79,2,2,]),'assignation':([0,2,18,33,44,55,56,57,74,85,86,],[3,3,3,3,3,3,3,3,3,3,3,]),'structure':([0,2,18,33,44,55,56,57,74,85,86,],[4,4,4,4,4,4,4,4,4,4,4,]),'condition':([11,14,],[24,35,]),'expression':([11,13,14,15,16,19,20,26,32,45,46,47,48,49,50,54,77,],[25,34,25,36,37,39,40,51,52,64,65,66,67,68,69,72,81,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme','parser5.py',27),
  ('programme -> statement programme','programme',2,'p_programme','parser5.py',28),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parser5.py',36),
  ('statement -> assignation','statement',1,'p_statement','parser5.py',41),
  ('statement -> structure','statement',1,'p_statement','parser5.py',42),
  ('statement -> BREAK','statement',1,'p_statement_break','parser5.py',47),
  ('statement -> PRINT { expression }','statement',4,'p_statement_print','parser5.py',52),
  ('condition -> expression EQUAL expression','condition',3,'p_condition','parser5.py',57),
  ('condition -> expression NOTEQUAL expression','condition',3,'p_condition','parser5.py',58),
  ('condition -> expression > expression','condition',3,'p_condition','parser5.py',59),
  ('condition -> expression < expression','condition',3,'p_condition','parser5.py',60),
  ('structure -> WHILE condition { programme }','structure',5,'p_structure_while','parser5.py',65),
  ('structure -> LOOP { programme }','structure',4,'p_structure_loop','parser5.py',70),
  ('structure -> FOR expression TO expression STEP expression { programme }','structure',9,'p_structure_for','parser5.py',75),
  ('structure -> IF condition { programme }','structure',5,'p_structure_if','parser5.py',80),
  ('structure -> IF condition { programme } ELSE { programme }','structure',9,'p_structure_if_else','parser5.py',85),
  ('structure -> SWITCH expression { programme statement }','structure',6,'p_structure_switch','parser5.py',90),
  ('structure -> CASE expression { programme BREAK }','structure',6,'p_structure_case','parser5.py',95),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser5.py',100),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parser5.py',101),
  ('expression -> IDENTIFIER','expression',1,'p_expression_var','parser5.py',106),
  ('expression -> DIGIT','expression',1,'p_expression_num','parser5.py',111),
  ('expression -> TEXT','expression',1,'p_expression_text','parser5.py',116),
  ('expression -> TRUE','expression',1,'p_expression_bool','parser5.py',121),
  ('expression -> FALSE','expression',1,'p_expression_bool','parser5.py',122),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser5.py',127),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parser5.py',132),
  ('type -> NUMBER','type',1,'p_type','parser5.py',137),
  ('type -> BOOL','type',1,'p_type','parser5.py',138),
  ('type -> TEXT','type',1,'p_type','parser5.py',139),
  ('type -> LIST','type',1,'p_type','parser5.py',140),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parser5.py',145),
  ('assignation -> BOOL IDENTIFIER = TRUE','assignation',4,'p_assign_bool','parser5.py',151),
  ('assignation -> BOOL IDENTIFIER = FALSE','assignation',4,'p_assign_bool','parser5.py',152),
  ('assignation -> NUMBER IDENTIFIER = DIGIT','assignation',4,'p_assign_number','parser5.py',158),
  ('assignation -> TEXT IDENTIFIER = CHARACTERS','assignation',4,'p_assign_text','parser5.py',164),
]
